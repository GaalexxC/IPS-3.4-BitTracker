<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Board Index Latest Torrents</hook_name>
      <hook_desc>Shows the latest torrents from devCU biTracker on your board index</hook_desc>
      <hook_author>devCU Software Development - PM</hook_author>
      <hook_email>support@devcu.com</hook_email>
      <hook_website>http://devcu.com</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:1:{s:9:"bitracker";a:3:{s:8:"app_name";s:9:"devCU biTracker";s:11:"min_version";i:0;s:11:"max_version";i:0;}}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long>10000</hook_version_long>
      <hook_extra_data><![CDATA[a:1:{s:8:"database";a:0:{}}]]></hook_extra_data>
      <hook_key>bitlatesttorrents</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>boardIndexLatestTorrents.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>boardIndexLatestTorrents</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_boards";s:12:"skinFunction";s:18:"boardIndexTemplate";s:4:"type";s:7:"foreach";s:2:"id";s:11:"side_blocks";s:8:"position";s:9:"outer.pre";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class boardIndexLatestTorrents
{
	public $registry;
	
	public function __construct()
	{
        /* Make registry objects */
		$this->registry		=  ipsRegistry::instance();
	}
	
	public function getOutput()
	{
		//-----------------------------------------
		// Get Torrents library and API
		//-----------------------------------------

		$classToLoad = IPSLib::loadLibrary( IPS_ROOT_PATH . 'api/api_core.php', 'apiCore' );
		$classToLoad = IPSLib::loadLibrary( IPSLib::getAppDir('bitracker') . '/sources/api/api_bit.php', 'apiBitracker', 'bitracker' );
		
		$bit_api = new $classToLoad();
		$bit_api->init();

		//-----------------------------------------
		// Get images
		//-----------------------------------------
		
		$files = array();
		$files = $bit_api->returnBitracker( 0, 10, 1 );
		
		if( count($files) )
		{
			return $this->registry->output->getTemplate('biTracker_board')->portalBlock( $this->registry->getClass('class_localization')->words['latest_bitracker'], $files );
		}
		
		return '';
	}
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
